---
title: "Systems"
author: "Adrien Bouisson"
format: html
editor: visual
execute: 
  echo: false
  warning: false
  error: false
---
I upload all packages for the exercise

```{r}
library(dplyr)
library(tidyr)
library(vroom)
library(ggplot2)
library(here)
library(knitr)
library(stringr)
```

```{r}
here::i_am("systems_stars.Rproj")
```
# I. Main data set imports 

## Question 1 

I clearly uploaded everything before reading to fixed it, like that i can have all data files and i will commit only the main data file in my repository. 

## Question 2 

link to my github's repository : https://github.com/adribsn/Systems_stars 

## Question 3 

```{r}
# importation of the main data set
systems <- vroom(here("the_systems.csv"), na = '_', locale = locale(decimal_mark=',')) 

num_systems <- nrow(systems)
num_variables <- ncol(systems)
numerical_variables <- sum(sapply(systems, is.numeric))

# Validation message by using if / else

if (num_systems == 1085 && num_variables == 8 && numerical_variables == 2) {
  cat("Data loaded successfully!")
} else {
  cat("Error: Invalid loading process.")
}
systems |> select(where(is.numeric))

head_systems <- systems %>%
  head(n=100) # We use head_df because it allows you to quickly visualize the first observations of a dataset.

```

This dataset is made of `r nrow(systems)` stars described by `r ncol(systems)` variables.

## Question 4 

```{r}
summary_table <- tibble(
  Metric = c("Number of Observations", "Number of Variables", "Number of Missing Values", "Observations with Missing Values"),
  Value = c(
    nrow(systems),
    ncol(systems),
    sum((is.na(systems))),
    sum(rowSums(is.na(systems)) > 0)
  ))

knitr::kable(summary_table)
```
This dataset is made of `r nrow(systems)` stars described by `r ncol(systems)` variables, and there are 0 missings values because we replace blank by na. 

#II. Introductory Analysis

## Question 5 

```{r}
filtered_data <- systems %>%
  filter(!is.na(`EQUIVALENT TEMPERATURE`) & !is.na(`Mass`))

ggplot(filtered_data, aes(x = `EQUIVALENT TEMPERATURE`, y = `Mass`)) +
  geom_point() +
  labs(title = "Mass of a star as a function of its temperature",
       x = "EQUIVALENT TEMPERATURE)",
       y = "Mass")
```

## Question 6 
```{r}
filtered_data <- systems %>%
  filter(!is.na(`EQUIVALENT TEMPERATURE`) & !is.na(`Mass`))

#| echo: false
# We compute which stars are the most extreme for each variables
min_distance <- which.min(systems$`DISTANCE (LIGHTYEARS)`)
min_distance_name <- systems$STAR[min_distance]
max_distance <- which.max(systems$`DISTANCE (LIGHTYEARS)`)
max_distance_name <- systems$STAR[max_distance]

min_temperature <- which.min(systems$`EQUIVALENT TEMPERATURE`)
min_temperature_name <- systems$STAR[min_temperature]
max_temperature <- which.max(systems$`EQUIVALENT TEMPERATURE`)
max_temperature_name <- systems$STAR[max_temperature]

min_mass <- which.min(systems$Mass)
min_mass_name <- systems$STAR[min_mass]
max_mass <- which.max(systems$Mass)
max_mass_name <- systems$STAR[max_mass]

min_radius <- which.min(systems$`Relative Radius`)
min_radius_name <- systems$STAR[min_radius]
max_radius <- which.max(systems$`Relative Radius`)
max_radius_name <- systems$STAR[max_radius]

min_luminosity <- which.min(systems$`STAR LUMINOSITY`)
min_luminosity_name <- systems$STAR[min_luminosity]
max_luminosity <- which.max(systems$`STAR LUMINOSITY`)
max_luminosity_name <- systems$STAR[max_luminosity]

table_extreme_stars <- systems |>
  summarise(
    "Star with the min distance" = min_distance_name,
    "Star with the max distance" = max_distance_name,
    "Star with the min temperature" = min_temperature_name,
    "Star with the max temperature" = max_temperature_name,
    "Least massive star" = min_mass_name,
    "Most massive star" = max_mass_name,
    "Star the least radius" = min_radius_name,
    "Star the most radius" = max_radius_name,
    "Star with the least luminosity" = min_luminosity_name,
    "Star with the most luminosity" = max_luminosity_name
  )
knitr::kable(table_extreme_stars)
```
# III. Factions 

## Question 7 

We commit the two data files 

## Question 8 

```{r}
# Data file factions 

factions <-vroom(here("Factions.csv"),
                    delim = ":", 
                    quote = "\"", 
                    na = c("", "NA"))
# Data file controling_factions

controling_faction<-vroom(here("bt%faction%system.csv"), 
                    delim = ":", 
                    quote = "\"", 
                    na = c("", "NA"))

```


